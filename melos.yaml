name: my_project

command:
  bootstrap:
    usePubspecOverrides: true

packages:
  - packages/**
  - examples/**

scripts:

  analyze:
    run: dart analyze . --fatal-infos
    exec:
      concurrency: 1
    description: Run `dart analyze` in all packages.

  test:
    run: dart test --reporter expanded
    exec:
      concurrency: 1
    description: Run Dart tests for a specific package in this project.
    select-package:
      flutter: false
      dir-exists: 
        - 'test/'
    # This tells Melos tests to ignore env variables passed to tests from `melos run test`
    # as they could change the behaviour of how tests filter packages.
    env:
      MELOS_TEST: true

  format: dart format -o write .

  format-check:
    exec: flutter format . --set-exit-if-changed
    description: Run `flutter format` checks for all packages.

  version: dart run scripts/generate_version.dart

  activate:
    description: Activate the local version of flutterw for development.
    run: dart pub global activate --source="path" . --executable="flutterw" --overwrite

  activate:pub:
    description: Activate the published version of flutterw.
    run: dart pub global activate flutterw --overwrite